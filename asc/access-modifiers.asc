

ACCESS MODIFIERS


__ June 30, 2015July 20, 2015 __ An

_Access_ _modifiers_ ialah keyword yang digunakan untuk menentukan sama
ada _class_, _fields_, atau _methods_ boleh diakses ataupun tidak.
Keyword tersebut ialah _public_, _private_, dan _protected_.

------------------------------------------------------------------------

Public

Apabila keyword _public_ digunakan bermakna _class_, _fields_, atau
_methods_ tersebut boleh digunakan di mana-mana sahaja.

------------------------------------------------------------------------

Private

Keyword _private_ pula hanya boleh digunakan oleh code di dalam _class_
itu sahaja. Keyword _private_ biasanya diletakkan pada _fields_. Sebagai
contoh:

package kucing; public class Kucing { private String nama; private int
umur; public Kucing() { nama = "Tiada nama"; umur = 0; } public String
getNama() { return nama; } public int getUmur() { return umur; } public
void setNama(String n) { nama = n; } public void setUmur(int u) { if (u
< 0) { System.out.println("Error, umur tidak boleh negatif!"); } else {
umur = u; } } public void mengiau() { System.out.println("Meow"); }
public void minum() { System.out.println("Slrrp, slrrp"); } }

+--------------------------------------+--------------------------------------+
| 1                                    | package kucing;                      |
|                                      |                                      |
| 2                                    |                                      |
|                                      |                                      |
| 3                                    | public class Kucing {                |
|                                      |                                      |
| 4                                    |     private String nama;             |
|                                      |                                      |
| 5                                    |     private int umur;                |
|                                      |                                      |
| 6                                    |                                      |
|                                      |                                      |
| 7                                    |     public Kucing() {                |
|                                      |                                      |
| 8                                    |         nama = "Tiada nama";         |
|                                      |                                      |
| 9                                    |         umur = 0;                    |
|                                      |                                      |
| 10                                   |     }                                |
|                                      |                                      |
| 11                                   |                                      |
|                                      |                                      |
| 12                                   |     public String getNama() {        |
|                                      |                                      |
| 13                                   |         return nama;                 |
|                                      |                                      |
| 14                                   |     }                                |
|                                      |                                      |
| 15                                   |                                      |
|                                      |                                      |
| 16                                   |     public int getUmur() {           |
|                                      |                                      |
| 17                                   |         return umur;                 |
|                                      |                                      |
| 18                                   |     }                                |
|                                      |                                      |
| 19                                   |                                      |
|                                      |                                      |
| 20                                   |     public void setNama(String n) {  |
|                                      |                                      |
| 21                                   |         nama = n;                    |
|                                      |                                      |
| 22                                   |     }                                |
|                                      |                                      |
| 23                                   |                                      |
|                                      |                                      |
| 24                                   |     public void setUmur(int u) {     |
|                                      |                                      |
| 25                                   |         if (u < 0) {                 |
|                                      |                                      |
| 26                                   |             System.out.println("Erro |
|                                      | r,                                   |
| 27                                   | umur tidak boleh negatif!");         |
|                                      |                                      |
| 28                                   |         } else {                     |
|                                      |                                      |
| 29                                   |             umur = u;                |
|                                      |                                      |
| 30                                   |         }                            |
|                                      |                                      |
| 31                                   |     }                                |
|                                      |                                      |
| 32                                   |                                      |
|                                      |                                      |
| 33                                   |     public void mengiau() {          |
|                                      |                                      |
| 34                                   |         System.out.println("Meow");  |
|                                      |                                      |
| 35                                   |     }                                |
|                                      |                                      |
| 36                                   |                                      |
|                                      |                                      |
| 37                                   |     public void minum() {            |
|                                      |                                      |
| 38                                   |         System.out.println("Slrrp,   |
|                                      | slrrp");                             |
| 39                                   |                                      |
|                                      |     }                                |
|                                      |                                      |
|                                      | }                                    |
+--------------------------------------+--------------------------------------+

Selepas meletakkan keyword _private_, maka kita tidak boleh compile code
berikut:

package kucing; public class Main { public static void main(String[]
args) { Kucing kucingSaya = new Kucing();
System.out.println(kucingSaya.nama); // error di sini } }

+--------------------------------------+--------------------------------------+
| 1                                    | package kucing;                      |
|                                      |                                      |
| 2                                    |                                      |
|                                      |                                      |
| 3                                    | public class Main {                  |
|                                      |                                      |
| 4                                    |     public static void main(String[] |
|                                      | args) {                              |
| 5                                    |                                      |
|                                      |         Kucing kucingSaya = new      |
| 6                                    | Kucing();                            |
|                                      |                                      |
| 7                                    |         System.out.println(kucingSay |
|                                      | a.nama);    //                       |
| 8                                    | error di sini                        |
|                                      |                                      |
|                                      |     }                                |
|                                      |                                      |
|                                      | }                                    |
+--------------------------------------+--------------------------------------+

Antara kelebihan menggunakan _private_ adalah bagi memastikan code tidak
boleh mengubah _fields_ secara langsung (_direct_) kerana data untuk
_fields_ tersebut perlu dipastikan terlebih dahulu melalui _setter_.

------------------------------------------------------------------------



Tiada modifier

Jika kita tidak meletakkan _modifier_, hanya code dalam _class_ dan
_package_ yang sama sahaja yang boleh akses.

------------------------------------------------------------------------

Protected

Keyword _protected_ hampir sama dengan yang tiada _modifier_, dengan
tambahan code di dalam _subclass_ di _package_ lain juga boleh akses.
Lihat topik _inheritance_ untuk mengetahui dengan lebih lanjut mengenai
_subclass_.
