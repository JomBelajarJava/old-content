
EXCEPTION (PART 2)


__ July 4, 2015July 20, 2015 __ An

Semasa membuat input/output, kita mesti membuat _exception handling_.
Jika perasan, semua class yang terlibat dengan input/output perlu
ditutup selepas digunakan. Contohnya menggunakan method _‘close()’_
seperti berikut:

package essential; import java.io.BufferedReader; import
java.io.FileReader; import java.io.IOException; public class
InputDariFile { public static void main(String[] args) throws
IOException { BufferedReader reader = null; try { reader = new
BufferedReader(new FileReader("cubaan.txt")); String input; while
((input = reader.readLine()) != null) { System.out.println(input); } }
finally { reader.close(); } } }

+--------------------------------------+--------------------------------------+
| 1                                    | package essential;                   |
|                                      |                                      |
| 2                                    |                                      |
|                                      |                                      |
| 3                                    | import java.io.BufferedReader;       |
|                                      |                                      |
| 4                                    | import java.io.FileReader;           |
|                                      |                                      |
| 5                                    | import java.io.IOException;          |
|                                      |                                      |
| 6                                    |                                      |
|                                      |                                      |
| 7                                    | public class InputDariFile {         |
|                                      |                                      |
| 8                                    |     public static void main(String[] |
|                                      | args) throws IOException {           |
| 9                                    |                                      |
|                                      |         BufferedReader reader =      |
| 10                                   | null;                                |
|                                      |                                      |
| 11                                   |         try {                        |
|                                      |                                      |
| 12                                   |             reader = new             |
|                                      | BufferedReader(new                   |
| 13                                   | FileReader("cubaan.txt"));           |
|                                      |                                      |
| 14                                   |             String input;            |
|                                      |                                      |
| 15                                   |             while ((input =          |
|                                      | reader.readLine()) != null) {        |
| 16                                   |                                      |
|                                      |                 System.out.println(i |
| 17                                   | nput);                               |
|                                      |                                      |
| 18                                   |             }                        |
|                                      |                                      |
| 19                                   |         } finally {                  |
|                                      |                                      |
| 20                                   |             reader.close();          |
|                                      |                                      |
|                                      |         }                            |
|                                      |                                      |
|                                      |     }                                |
|                                      |                                      |
|                                      | }                                    |
+--------------------------------------+--------------------------------------+

Bagi mengelakkan programmer lupa untuk menutup semula class tersebut,
Java menyediakan satu lagi jenis _exception handling_ iaitu
_try-with-resources_.

------------------------------------------------------------------------

try-with-resources

Dalam _try-with-resources_, class yang digunakan untuk input/output
diletakkan di dalam kurungan selepas _‘try’_:

package essential; import java.io.BufferedReader; import
java.io.FileReader; import java.io.IOException; import
java.util.logging.Level; import java.util.logging.Logger; public class
InputDariFile { public static void main(String[] args) { try
(BufferedReader reader = new BufferedReader(new
FileReader("cubaan.txt"))) { String input; while ((input =
reader.readLine()) != null) { System.out.println(input); } } catch
(IOException ex) {
Logger.getLogger(InputDariFile.class.getName()).log(Level.SEVERE, null,
ex); } } }

+--------------------------------------+--------------------------------------+
| 1                                    | package essential;                   |
|                                      |                                      |
| 2                                    |                                      |
|                                      |                                      |
| 3                                    | import java.io.BufferedReader;       |
|                                      |                                      |
| 4                                    | import java.io.FileReader;           |
|                                      |                                      |
| 5                                    | import java.io.IOException;          |
|                                      |                                      |
| 6                                    | import java.util.logging.Level;      |
|                                      |                                      |
| 7                                    | import java.util.logging.Logger;     |
|                                      |                                      |
| 8                                    |                                      |
|                                      |                                      |
| 9                                    | public class InputDariFile {         |
|                                      |                                      |
| 10                                   |     public static void main(String[] |
|                                      | args) {                              |
| 11                                   |                                      |
|                                      |         try (BufferedReader reader = |
| 12                                   | new BufferedReader(new               |
|                                      | FileReader("cubaan.txt"))) {         |
| 13                                   |                                      |
|                                      |             String input;            |
| 14                                   |                                      |
|                                      |             while ((input =          |
| 15                                   | reader.readLine()) != null) {        |
|                                      |                                      |
| 16                                   |                 System.out.println(i |
|                                      | nput);                               |
| 17                                   |                                      |
|                                      |             }                        |
| 18                                   |                                      |
|                                      |         } catch (IOException ex) {   |
| 19                                   |                                      |
|                                      |             Logger.getLogger(InputDa |
| 20                                   | riFile.class.getName()).log(Level.SE |
|                                      | VERE,                                |
|                                      | null, ex);                           |
|                                      |                                      |
|                                      |         }                            |
|                                      |                                      |
|                                      |     }                                |
|                                      |                                      |
|                                      | }                                    |
+--------------------------------------+--------------------------------------+

Jadi, Java akan tutup secara automatik class BufferedReader selepas
digunakan walaupun kita tidak meletakkan method _‘close()’_.

Keyword _catch_, _finally_, dan _throws_ masih boleh digunakan seperti
biasa.
